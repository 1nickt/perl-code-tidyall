#!/usr/bin/perl
use Getopt::Long;
use Pod::Usage;
use Code::TidyAll::Util qw(can_load);
use strict;
use warnings;

sub usage {
    my $msg = shift;
    print "$msg\n" if $msg;
    require Pod::Usage;
    Pod::Usage::pod2usage( { verbose => 2 } );
}

my %params;
my $class = 'Code::TidyAll';

GetOptions(
    'backup_dir'  => \$params{backup_dir},
    'backup_keep' => \$params{backup_keep},
    'cache_dir'   => \$params{cache_dir},
    'class'       => \$class,
    'data_dir'    => \$params{data_dir},
    'git'         => \$git_mode,
    'c|conf'      => \$params{conf_file},
    'h|help'      => \$help,
    'r|recursive' => \$params{recursive},
    'svn'         => \$svn_mode,
) or usage();

usage("-c|--conf_file required") if !$params{conf_file};
die "cannot load '$class'" unless can_load($class);

my @paths = @ARGV or usage("path(s) required");
@paths = uniq( map { $class->files_from_svn_status($_) } @paths ) if $svn_mode;
@paths = uniq( map { $class->files_from_git_status($_) } @paths ) if $git_mode;

my $ct = $class->new(%params);
foreach my $path (@paths) {
    $ct->process_path($path);
}
